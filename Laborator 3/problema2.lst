     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 02                          a db 2
    14 00000001 01                          b db 1
    15 00000002 CA00                        c dw 202
    16 00000004 02                          d db 2
    17 00000005 0500000000000000            x dq 5
    18                                  
    19                                  ; our code starts here
    20                                  ;(8 - a*b*100 + c)/d + x
    21                                  ;a,b,d-byte; c-doubleword; x-qword
    22                                  segment code use32 class=code
    23                                      start:
    24                                          ;a * b * 100
    25 00000000 A0[00000000]                    mov AL, byte [a]; AL -> a, AL -> 2
    26 00000005 F625[01000000]                  mul byte [b]; AX : AL * b, AX -> 2 * 1 = 2
    27 0000000B 6631DB                          xor BX, BX  ; BX -> 0000
    28 0000000E B364                            mov BL,100  ;BL -> 100; BL->64
    29 00000010 66F7E3                          mul BX      ; DX:AX -> AX * BX; AX:DX -> C8:00
    30 00000013 66F7D8                          neg AX
    31 00000016 66F7DA                          neg DX
    32 00000019 660305[02000000]                add AX, [c]
    33 00000020 6683D200                        adc DX, 0
    34                                          
    35                                          ; exit(0)
    36 00000024 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    37 00000026 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
